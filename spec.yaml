#! spec.yaml
name: zero2prodx
# Consulta https://www.digitalocean.com/docs/app-platform/#regional-availability
# https://www.digitalocean.com/docs/platform/availability-matrix/
# Deben especificarse en minúsculas.
region: nyc1
services:
  - name: zero2prodx
    # Relativo a la raíz del repositorio
    dockerfile_path: Dockerfile
    source_dir: .
    github:
      # Dependiendo de cuándo creaste el repositorio,
      # la rama por defecto en GitHub podría llamarse `master`
      branch: master
      # ¡Despliega una nueva versión en cada commit a `master`!
      # ¡Bienvenido a la implementación continua!
      deploy_on_push: true
      # !!! Completa esto con tus datos
      repo: Brayan-Javier-Gomez/zero2prodx
    # Prueba activa utilizada por DigitalOcean para verificar que la app está saludable
    health_check:
      # Ruta al endpoint de verificación de estado
      http_path: /health_check
      # Puerto en el que la aplicación escuchará solicitudes entrantes
      # Debe coincidir con el especificado en configuration/production.yaml
    http_port: 8000
    # Para entornos de producción usaríamos al menos dos instancias,
    # pero tratemos de mantener los costos bajo control por ahora...
    instance_count: 1
    instance_size_slug: basic-xxs
    # Todas las solicitudes entrantes deben dirigirse a nuestra app
    routes:
      - path: /

    envs:
      - key: APP_DATABASE__USERNAME
        scope: RUN_TIME
        value: ${newsletter.USERNAME}
      - key: APP_DATABASE__PASSWORD
        scope: RUN_TIME
        value: ${newsletter.PASSWORD}

databases:
  # PG = Postgres
  - engine: PG
    # Database name
    name: newsletter
    # Again, let's keep the bill lean
    num_nodes: 1
    size: db-s-dev-database
    # Postgres version - using the latest here
    version: "16"